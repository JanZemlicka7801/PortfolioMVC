@model PortfolioMVC.Models.DTOs.ProjectDto

@{
    ViewData["Title"] = "Project Details";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-4">Project Details</h1>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
            <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header bg-light">
            <h3 class="card-title mb-0">@Model.Name</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <div class="mb-4">
                        <h5>Description</h5>
                        <p class="lead">@(string.IsNullOrEmpty(Model.Description) ? "No description provided." : Model.Description)</p>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h5>Start Date</h5>
                            <p>@Model.StartDate.ToString("MMMM dd, yyyy")</p>
                        </div>
                        <div class="col-md-6">
                            <h5>End Date</h5>
                            <p>@Model.EndDate.ToString("MMMM dd, yyyy")</p>
                        </div>
                    </div>

                    <div>
                        <h5>Project Duration</h5>
                        <p>@((Model.EndDate - Model.StartDate).TotalDays.ToString("F0")) days</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h5>Project Status</h5>
                            @{
                                var today = DateTime.Today;
                                var status = "Not Started";
                                var statusClass = "text-secondary";

                                if (today > Model.EndDate)
                                {
                                    status = "Completed";
                                    statusClass = "text-success";
                                }
                                else if (today >= Model.StartDate)
                                {
                                    status = "In Progress";
                                    statusClass = "text-primary";
                                }
                            }
                            <p class="@statusClass fw-bold">@status</p>

                            <h5 class="mt-3">Project Manager</h5>
                            <p>@(string.IsNullOrEmpty(Model.ManagerId) ? "Not Assigned" : "Assigned")</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Team Members</h4>
            <a asp-controller="TeamMembers" asp-action="Create" class="btn btn-sm btn-outline-primary">Add Team Member</a>
        </div>
        <div class="card-body">
            @await Component.InvokeAsync("ProjectTeamMembers", new { projectId = Model.Id })
        </div>
    </div>
</div>